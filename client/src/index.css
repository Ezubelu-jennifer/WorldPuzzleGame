@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
}

/* Add animation classes for the puzzle pieces */
.puzzle-piece {
  transform: scale(3.0); /* Increased from 2.2 to 3.0 */
  transition: transform 0.3s ease;
  z-index: 2; /* Ensure pieces are above other elements */
}

.puzzle-piece-enlarged {
  transform: scale(3.5) !important; /* Increased from 2.5 to 3.5 */
  filter: drop-shadow(0px 8px 15px rgba(255,0,0,0.35)) !important; /* Red shadow for better visibility */
  transition: transform 0.15s cubic-bezier(0.175, 0.885, 0.32, 1.275) !important;
  z-index: 100 !important; /* Ensure piece is on top when enlarged */
}

.puzzle-piece-dragging {
  transform: scale(1.0) !important; /* Now exactly 1.0 (actual size) for accurate fit */
  filter: drop-shadow(0px 6px 12px rgba(255,0,0,0.35)) !important; /* Red shadow for better visibility */
  transition: transform 0.15s cubic-bezier(0, 0, 0.2, 1) !important;
  z-index: 50 !important; /* Ensure piece is on top when dragging */
}

/* Enhanced pulse animation for piece placement with stronger visual feedback */
@keyframes pulse {
  0% {
    filter: drop-shadow(0 0 10px rgba(0, 255, 0, 0.5)) brightness(1.2);
    transform: scale(1);
    stroke-width: 3.5;
  }
  25% {
    filter: drop-shadow(0 0 30px rgba(0, 255, 0, 0.9)) brightness(1.5);
    transform: scale(1.5);
    stroke-width: 6;
  } 
  50% {
    filter: drop-shadow(0 0 50px rgba(0, 255, 0, 1)) brightness(1.8);
    transform: scale(1.8);
    stroke-width: 6;
  }
  75% {
    filter: drop-shadow(0 0 25px rgba(0, 255, 0, 0.9));
    transform: scale(1.25);
    stroke-width: 5;
  }
  100% {
    filter: drop-shadow(0 0 10px rgba(0, 255, 0, 0.5));
    transform: scale(1);
    stroke-width: 3.5;
  }
}

/* Strong pulse animation for correct placement */
@keyframes strongPulse {
  0% {
    filter: drop-shadow(0 0 15px rgba(0, 255, 0, 0.7));
    transform: scale(1.1);
    stroke-width: 4;
  }
  25% {
    filter: drop-shadow(0 0 35px rgba(0, 255, 0, 1));
    transform: scale(1.3);
    stroke-width: 6;
  } 
  50% {
    filter: drop-shadow(0 0 50px rgb(0, 255, 0));
    transform: scale(1.5);
    stroke-width: 7;
  }
  75% {
    filter: drop-shadow(0 0 35px rgba(0, 255, 0, 1));
    transform: scale(1.3);
    stroke-width: 6;
  }
  100% {
    filter: drop-shadow(0 0 15px rgba(0, 255, 0, 0.7));
    transform: scale(1.1);
    stroke-width: 4;
  }
}

/* Apply pulse animation class */
.pulse-effect {
  animation: pulse 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) !important;
}

/* Apply strong pulse animation class */
.strong-pulse-effect {
  animation: strongPulse 1.2s cubic-bezier(0.175, 0.885, 0.32, 1.275) !important;
}

/* New enhanced animation for our StatePiece component */
.correctly-placed-pulse {
  animation: strongPulse 1.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  z-index: 1000 !important;
}

/* Fade-in animation for popups */
@keyframes fadeIn {
  0% { opacity: 0; transform: translateY(-10px); }
  70% { opacity: 1; transform: translateY(5px); }
  85% { transform: translateY(-2px); }
  100% { opacity: 1; transform: translateY(0); }
}

/* Stronger fade-in animation for matched region popups */
@keyframes popupFadeIn {
  0% { opacity: 0; transform: translateY(-15px) scale(0.8); }
  20% { opacity: 1; }
  60% { transform: translateY(5px) scale(1.1); }
  80% { transform: translateY(-3px) scale(1.05); }
  100% { opacity: 1; transform: translateY(0) scale(1); }
}

/* State piece wrapper base styling */
.state-piece-wrapper {
  will-change: transform;
}

.state-piece-wrapper.dragging {
  cursor: grabbing !important;
}

.state-piece-wrapper.placed path {
  transition: stroke-width 0.3s ease, stroke 0.3s ease, fill 0.3s ease;
  stroke-width: 2 !important;
  stroke: rgb(0, 120, 0) !important; 
  fill-opacity: 0.9 !important;
}

/* Add a shine effect to help with visibility */
.region-piece-container {
  position: relative;
  overflow: visible !important;
  z-index: 5;
}

/* Make SVG paths more visible */
path {
  stroke-linejoin: round;
  stroke-linecap: round;
}

/* Animation for guidance dots removed as requested */

/* Guidance elements styling */
.guidance-elements {
  pointer-events: none;
  z-index: 50;
}

.primary-dot {
  filter: drop-shadow(0 0 5px rgba(255,255,255,0.7));
}

.secondary-dot {
  opacity: 0.7;
}