import { 
  users, type User, type InsertUser,
  countries, type Country, type InsertCountry,
  regions, type Region, type InsertRegion,
  gameSessions, type GameSession, type InsertGameSession,
  type RegionPiece
} from "@shared/schema";
// Import directly from the client directory
import { initialCountries } from "../client/src/data/countries";

// Helper function to transform SVG paths for more variety
function transformPath(path: string, scaleX: number = 1.0, scaleY: number = 1.0): string {
  // This is a simple path transformation that scales the path by adjusting coordinates
  
  // Parse commands from the path data
  const commands = path.match(/[a-zA-Z][^a-zA-Z]*/g) || [];
  let result = '';
  
  for (const cmd of commands) {
    const type = cmd[0]; // Command type (M, L, C, etc.)
    const rest = cmd.slice(1); // Coordinates
    
    // Extract numbers from the command
    const numbers = rest.trim().split(/[\s,]+/).map(parseFloat).filter(n => !isNaN(n));
    let transformed = type;
    
    // Apply scaling based on command type
    for (let i = 0; i < numbers.length; i++) {
      // Scale X coordinates (even indices) and Y coordinates (odd indices)
      if (i % 2 === 0) {
        transformed += ' ' + (numbers[i] * scaleX);
      } else {
        transformed += ' ' + (numbers[i] * scaleY);
      }
    }
    
    result += transformed;
  }
  
  return result;
}

// Define regions for countries based on the provided SVG data
const sampleRegions: { [key: number]: RegionPiece[] } = {
  // Kenya regions (we'll add 10 for demonstration, Kenya has 47 counties in total)
  2: [
    {
      id: 101,
      name: "Nairobi",
      svgPath: "M319.39,669.87L317.78,668.5L318.53,668.09L317.9,666.93L317,667.46L315.16,664.27L313.37,664.69L309.59,667.37L307.74,666.01L304.58,666.59L301.2,665.47L300.05,664.33L303.05,661.09L300.76,659.84L298.72,659.74L297.63,660.91L298.78,662.95L296.36,663.26L295.05,662.63L294.78,663.9L293.89,663.98L293.68,664.84L291.83,664.32L292.17,665.16L287.93,662.81L287.25,663.93L287.92,664.63L286.51,666.68L284.45,665.78L283.58,667.25L281.75,666.93L280.88,669.84L278.28,670.36L277.57,671.16L277.56,672.22L275.4,675.38L274.88,675.02L270.7,674.58L269.72,675.1L269.86,676.01L268.61,677.13L268.95,677.98L270.33,678.9L273.96,679.15L280.32,674.32L282.22,674.6L282.57,675.97L282.32,677.49L283.67,677.12L287.63,673.52L288.7,673.31L291.83,673.91L294.19,675.34L298.11,675.46L302.28,677.22L305.01,677.52L306.71,676.76L307.71,676.84L314.59,673.83L319.39,669.87z",
      correctX: 300,
      correctY: 670,
      isPlaced: false,
      fillColor: "#0EA5E9", 
      strokeColor: "#0369A1"
    },
    {
      id: 102,
      name: "Mombasa",
      svgPath: "M567.48,955.74L566.72,955.91L567.18,955.54L567.48,955.74zM573.19,950.1L573.91,951.37L573.68,951.94L574.3,951.18L576.48,952.28L576.13,953.76L573.14,959.47L571.58,958.45L572.82,956.02L572.17,955.98L569.86,952.86L568.57,954.12L568.56,955.46L567.68,955.65L568.36,954.48L567.44,952.91L567.96,952.27L567.7,951.48L568.42,950.73L568.79,950.98L568.4,950.18L569.24,950.13L569.4,950.53L569.82,950.13L569.9,950.54L570.8,950.26L571.24,951.01L570.7,951.33L571.53,950.83L573.19,950.1z",
      correctX: 570,
      correctY: 954,
      isPlaced: false,
      fillColor: "#06B6D4",
      strokeColor: "#0E7490"
    },
    {
      id: 103,
      name: "Kisumu",
      svgPath: "M62.61,545.26L62.11,545.81L57.77,546.71L55.24,547.96L50.36,551.56L57.54,573.64L62.44,570.89L79.83,569.52L84.65,572.66L85.2,575.07L86.07,574.69L87.32,576.01L87.74,575.91L88.2,576.77L87.46,576.95L87.73,577.84L88.45,577.85L88.21,578.49L89,579.12L90.24,578.83L91.45,580.8L91.56,582.48L94.95,582.9L95.39,583.44L95.82,583.12L97.72,583.39L97.96,583.86L98.58,583.09L100.68,582.22L100.59,584.02L101.72,583.85L102.13,584.04L102.15,584.9L105.08,583.93L106.62,584.16L108.47,582.79L109.39,582.78L109.95,582.2L108.73,581.34L109.19,580.8L111.29,579.48L111.82,577.57L111.34,576.79L111.37,575.68L110.7,574.68L110.7,573.24L110.46,572.48L109.6,572.3L109.17,570.84L109.32,570.14L108.65,569.22L108.65,568.09L107.98,567.68L107,567.86L106.44,566.77L106.44,566L105.63,564.74L104.97,564.86L104.16,563.58L101.09,561.38L100.41,560.4L99.61,560.17L99,558.91L97.39,557.76L96.96,556.88L96.08,556.54L96.06,555.59L95.62,554.93L94.76,555.05L94.21,554.53L93.89,553.51L92.31,552.59L90.63,551.97L89.87,552.09L88.77,551.44L88.09,551.42L86.43,550.02L85.67,550.04L85.11,549.33L83.79,549.1L82.49,547.75L81.71,547.47L80.31,548.34L79.56,549.92L78.62,549.66L77.36,550.42L74.75,550L73.83,550.19L73.62,548.84L72.06,547.16L69.89,546.53L69.35,546.99L66.8,547.03L64.37,545.01L62.61,545.26z",
      correctX: 85,
      correctY: 565,
      isPlaced: false,
      fillColor: "#38BDF8",
      strokeColor: "#0369A1"
    },
    {
      id: 104,
      name: "Nakuru",
      svgPath: "M230.17,600.25L229.92,601.95L229.15,602.29L228.82,603.45L227.34,604.35L226.67,604.35L226.57,602.98L225.77,603.37L224.37,605.63L221.81,607.04L220.9,608.87L219.89,608.76L219.22,608.01L218.93,604.83L218.18,605.74L217.05,605.59L216.24,604.62L215.56,605.17L213.99,604.3L210.94,604.44L209.31,603.58L207.88,603.47L207.09,602.34L205.03,601.77L204.63,601.21L204.2,599.04L203.51,599.11L202.08,597.82L200.69,597.9L198.88,597.55L198.02,596.42L197.12,596.51L196.58,595.98L197.2,594.15L197.07,592.03L195.19,592.7L194.1,592.41L194.17,593.67L193.2,592.9L192.43,593.54L191.93,594.92L189.25,594.47L189.2,593.18L188.71,592.83L189.13,592.27L188.85,590.84L188.11,591.17L185.24,587.92L183.95,588.12L182.79,588.98L182.28,590.02L181.71,590.05L181.45,588.86L179.52,587.98L177.4,588.14L175.98,586.88L175.32,586.94L175.25,585.71L175.67,584.33L175.15,580.64L174.38,577.11L179.61,577.95L181.19,579.13L182.18,579.23L183.34,580.39L184.79,580.33L188.36,578.96L190.89,579.04L193.17,578.3L195.11,576.46L197.18,575.86L201.43,575.85L204.87,577.1L205.87,577.78L205.74,578.7L206.37,579.26L206.44,580.75L208.04,582.26L209.51,582.47L209.96,580.88L211.25,580.97L212.05,582.12L213.77,582.91L213.83,583.98L216.29,584.33L217.3,584.93L220.21,584.8L222.1,584.04L222.61,584.51L221.86,586.35L221.9,588.54L222.88,589.77L222.56,592.66L224.6,590.46L226.68,590.22L227.84,590.57L227.69,591.33L228.65,591.91L230.03,594.26L230.79,594.66L230.17,600.25z",
      correctX: 210,
      correctY: 590,
      isPlaced: false,
      fillColor: "#7DD3FC",
      strokeColor: "#0369A1"
    },
    {
      id: 105,
      name: "Machakos",
      svgPath: "M337.21,622.12L335.84,622.24L335.33,622.92L334.83,627.51L332.61,627.29L331.61,628.86L334.27,629.73L336.84,632.93L340.88,635.49L341.54,636.94L340.44,637.72L341.04,638.44L341.86,638.12L341.82,639L342.78,640.19L344.51,638.28L345.73,639.94L342.82,641.45L342.98,642.17L345.23,642.45L347.34,643.64L349.63,645.07L351.11,647.2L348.06,649.43L343.4,655.45L338.9,650.83L337.15,650.29L335.9,650.47L333.61,651.68L332.22,651.22L330.34,651.64L328.3,653.44L328.28,655.22L327.66,656.55L327.77,657.35L323.57,658.71L323.09,661.46L324.64,662.67L325.49,662.61L325.71,663.73L326.43,664.14L327.28,666.05L327.79,665.94L329.71,663.99L330.87,663.59L333,664.47L333.13,665.46L332.1,666.72L332.65,669.05L333.87,668.57L334.64,667.52L338.64,667.34L339.69,669.51L339.36,671.54L336.01,673.07L335.22,673.56L334.93,674.25L332.63,674.88L332.13,675.95L337.48,676.22L339.61,678.2L341.11,678.32L342.07,678.99L343.54,681.97L343.84,685.05L344.92,686.18L344.75,687.25L345.7,689.28L345.9,692.67L348.19,693.79L348.66,694.56L349.4,694.71L349.82,695.86L349.19,696.78L349.81,698.59L350.44,699.03L350.46,701.12L351.79,702.42L351.63,703.37L349.57,704.37L348.47,702.89L346.17,701.39L343.14,700.51L342.6,699.87L347.45,695.68L352.66,696.96L355.58,695.52L356.53,695.84L357.78,695.39L359.57,696.46L360.53,696.18L361.16,697.44L364.04,697.47L364.6,695.75L365.64,694.98L366.7,694.98L369.13,693.9L369.89,693.19L369.7,690.8L368.82,689.02L369.06,687.14L368.65,684.75L368.97,683.4L370.12,682.53L371.48,680.09L371.51,678.5L370.11,675.3L370.72,674.56L370.06,673.8L369.43,673.93L368.4,673.18L367.12,673.22L365.76,674.02L364.45,673.11L363.44,672.86L361.7,673.68L359.2,673.66L358.65,671.7L356.5,669.05L355.95,666.95L356.46,665.85L356.3,664.29L354.87,662.59L354.61,660.05L353.75,659.71L353.93,658.99L352.36,656.84L350.64,653.88L351.55,650.11L351.62,646.67L351.24,643.1L350.02,640.71L350.41,639.66L349.79,637.58L350.15,636.24L347.66,633.15L348.72,632.24L347.83,628.8L347.1,628.3L346.41,628.45L345.53,627.1L342.12,622.85L339.55,622.64L337.21,622.12z",
      correctX: 350,
      correctY: 660,
      isPlaced: false,
      fillColor: "#BAE6FD",
      strokeColor: "#0369A1"
    },
    {
      id: 106,
      name: "Garissa",
      svgPath: "M436.99,531.05L436.89,528.92L437.27,527.2L436.8,525.94L437.15,523.59L436.84,522.27L435.41,520.82L435.09,519.7L435.34,517.34L434.94,516.58L434.96,515.36L437.37,513.48L437.97,513.5L439.91,512.18L440.69,512.58L446.26,511.04L447.47,511.05L449.13,512.27L450.81,512.31L451.65,513.04L453.06,515.63L454.81,516.61L456.8,519.24L456.8,520.41L451.31,524.75L451.25,526.23L451.84,527.34L451.63,528.27L452.83,528.9L454.91,531.66L456.99,533.33L457.54,534.33L459.13,535.76L461.75,540.48L461.82,543.12L462.55,544.21L463.7,544.92L464.63,546.45L466.56,547.98L467.36,550.32L467.18,552L467.6,553.97L467.49,554.68L466.57,555.7L466.54,557.25L467.37,557.72L469.18,560.36L470.56,561.2L471.83,560.95L474.09,561.64L475.2,561.24L476.76,561.56L479.22,559.67L481.24,559.81L482.25,559.33L483.2,558.09L485.58,557.14L486.2,555.35L487.7,556.52L489.54,557.01L491.06,556.54L492.51,556.94L493.41,556.68L493.22,551.31L491.89,549.9L490.94,548.02L491.05,547.32L491.86,547.29L492.79,546.22L492.86,545.23L493.61,544.97L494.51,543.51L495.3,542.96L495.65,542.01L496.91,541.14L496.43,540.46L495.5,540.69L493.94,539.77L493.59,538.99L494.6,537.55L494.42,535.67L494.61,534.07L495.46,533.37L496.2,531.35L495.77,530.2L496.04,529.39L494.77,525.66L494.78,524.17L495.78,521.77L496.51,522.41L497.4,521.74L498.77,521.83L499.5,520.67L500.93,520.19L501.54,518.26L502.28,517.6L502.38,516.4L503.33,515.15L506.14,512.43L506.84,510.7L509.05,508.77L509.15,507.95L508.37,506.29L508.26,504.6L509.88,503.51L510.76,501.36L510.78,498.29L509.68,494.39L509.76,493.29L510.36,493.14L510.62,492.47L512.21,492.57L513.41,493.28L514.57,493.55L516.1,493.23L517.25,493.5L518.18,494.5L518.9,494.3L518.73,492.59L519.05,490.45L517.54,488.77L515.23,487.66L515.12,486.77L515.57,485.82L515.36,484.94L513.72,483.7L513.38,482.14L512.38,479.47L512.87,478.54L512.16,476.56L512.59,474.6L512.08,474.11L510.82,474.07L508.77,471.87L507.9,469.95L508.45,468.35L507.33,467.6L507.05,465.82L506.42,464.88L505.52,464.78L504.65,463.51L503.57,463.72L502.91,464.77L501.89,464.24L501.17,464.63L500.23,466.09L499.34,466.29L498.86,467.04L497.16,467.74L495.09,467.48L493.42,471.07L492.06,472.12L489.83,472.05L488.91,471.15L486.5,471.37L485.25,470.32L483.93,470.32L482.98,471.49L481.63,471.92L479.67,471.03L478.36,471.15L477.17,471.69L474.23,473.1L473.3,472.85L471.35,473.24L468.48,474.82L466.26,475.55L465.31,477.37L462.84,479.31L461.4,481.25L460.31,481.29L459.46,482.19L458.41,481.61L457.12,486.16L455.31,487.44L454.88,488.85L453.14,490.25L451.76,490.3L452.22,491.46L454.16,493.45L454.05,494.19L451.97,494.34L450.31,495.38L449.31,495.17L448.87,493.86L447.28,493.23L446.14,493.68L444.2,493.36L443.05,493.92L442.43,494.68L440.83,494.78L436.97,496.6L436.72,499.18L437.47,500.25L438.46,504.4L438.56,505.85L438.03,507.94L438.45,510.19L439.64,513.07L440.74,517.34L442.1,520.41L441.98,522.31L442.38,524.75L442.04,527.4L440.43,528.52L439.14,528.69L436.99,531.05z",
      correctX: 475,
      correctY: 515,
      isPlaced: false,
      fillColor: "#0284C7",
      strokeColor: "#075985"
    },
    {
      id: 107,
      name: "Kiambu",
      svgPath: "M251.64,642.35L250.82,642.87L250.32,642.33L246.01,642.85L243.19,642.1L242.19,642.44L242.11,645.44L241.02,647.87L240.6,647.79L240.2,646.52L239.03,646.35L238.71,642.88L237.32,641.84L235.91,642.1L235.42,643.41L232.9,644.9L231.36,646.45L230.55,646.58L229.82,645.58L231.39,642.88L230.36,642.29L227.55,642.28L223.94,642.77L223.07,642.54L222.66,641.85L223.28,641.05L225.93,640.35L227.09,639.31L226.76,638.06L227.49,637.6L228.03,637.9L228.77,637.32L227.58,635.49L228.85,634.97L228.92,634.54L227.16,633.81L226.76,632.26L227.86,631.39L228.67,629.82L230.6,629.09L232.76,628.91L233.05,628.54L232.73,626.65L233.41,626.01L235.3,625.76L237.29,625.1L238.6,623.8L239.13,621.77L240.83,619.04L243.05,618.35L248.38,618.67L249.14,616.91L250.24,617.06L251.04,617.85L251.01,621.69L251.89,623.08L251.4,623.67L251.51,625.07L254.48,623.5L256.4,623.1L256.43,621.1L257.67,620.96L257.26,622.17L258.61,622.87L260.19,622.52L261.15,623.01L262.56,622.54L262.69,623.24L261.51,623.98L260.55,626.35L260.9,629.08L260.12,629.67L259.92,631.42L258.37,632.18L257.72,633.45L257.01,633.89L255.82,636.33L253.51,637.46L252.75,638.69L252.75,638.69L251.8,639.82L252.54,641.67L251.64,642.35z",
      correctX: 245,
      correctY: 630,
      isPlaced: false,
      fillColor: "#38BDF8",
      strokeColor: "#075985"
    },
    {
      id: 108,
      name: "Kilifi",
      svgPath: "M659.14,867.22L659.14,867.22L658.55,868.17L657.37,868.7L656.83,867.59L657.48,866.31L658.69,865.67L659.09,866.84L659.14,867.22zM654.58,864.54L655.18,866.08L654.77,866.46L654.22,866.03L654.06,864.66L654.58,864.54zM653.87,862.7L653.86,863.31L653.33,863.53L653.36,862.56L653.87,862.7zM652.43,861.49L652.47,862.68L651.87,861.85L652.43,861.49zM651.42,860.12L651.88,861.05L651.64,861.79L651.03,861.57L651.42,860.12zM648.05,858.21L648.46,858.71L648.24,859.41L647.48,859.16L648.05,858.21zM647.15,854.23L647.34,854.85L646.85,855.12L646.85,854.54L647.15,854.23zM649.18,846.61L649.48,847.42L649.16,848.32L648.7,847.29L649.18,846.61zM645.11,845.1L646.04,845.65L646.08,846.55L644.91,848.23L644.54,848.19L644.57,847.72L644.05,846.16L644.42,845.16L645.11,845.1zM642.72,835.52L643.48,836.32L642.97,836.79L642.72,835.52zM641.16,832.46L641.57,832.71L641.66,833.34L641.09,833.28L641.16,832.46zM634.46,829.17L635.06,830.07L634.39,830.46L633.99,829.65L634.46,829.17zM631.45,827.69L632.01,828.13L631.64,828.82L630.96,828.18L631.45,827.69zM631.07,825.68L631.79,825.95L631.8,826.63L631.02,826.49L631.07,825.68zM630.31,824.51L630.75,824.49L630.51,825.06L630.31,824.51zM629.87,823.03L630.32,823.49L629.94,824.35L629.37,824.13L629.87,823.03zM632.3,822.01L632.88,822.74L632.59,823.61L631.54,824.12L631.3,823.23L631.9,822.45L632.3,822.01zM633.72,820.25L634.34,820.83L633.93,821.37L633.06,821.07L633.72,820.25zM631.25,819.71L631.74,820.24L631.24,821.49L630.46,822.11L630.09,821.18L630.7,820.3L631.25,819.71zM628.61,814.86L628.68,815.33L628.15,815.09L628.61,814.86zM628.33,814.31L628.82,813.74L629.11,814.35L628.82,814.73L628.33,814.31zM624.77,813.6L625.4,814.17L624.78,815.12L624.27,814.48L624.77,813.6zM624.98,813.23L624.47,812.7L624.46,812.34L625.15,812.61L624.98,813.23zM621.7,812.51L621.93,813.22L621.51,813.66L620.83,813.34L621.7,812.51zM620.43,811.74L620.25,812.05L619.93,811.71L620.43,811.74zM617.49,811.46L617.36,810.74L617.81,810.51L617.49,811.46zM617.46,810.03L616.98,809.65L617.05,809.16L617.46,810.03zM614.45,810.44L614.29,809.79L614.46,809.46L614.62,810.11L614.45,810.44zM613.9,808.63L614.24,809.3L613.9,810.17L613.55,809.48L613.9,808.63zM616.67,808.1L616.96,808.65L616.63,809.45L616.09,809.16L616.67,808.1zM612.26,807.78L612.69,808.32L612.17,808.89L611.57,807.98L612.26,807.78zM613.27,805.35L613.84,806.7L613.3,807.4L613.08,806.63L612.68,806.54L612.75,805.38L613.27,805.35zM611.06,803.62L611.66,804.08L611.57,804.66L610.93,804.65L611.06,803.62zM609.55,804.29L610.05,804.88L609.68,805.53L609.11,805.26L609.55,804.29zM607.33,803.36L607.73,804.1L607.44,804.69L606.98,804.32L607.33,803.36zM608.44,802.98L607.99,801.54L608.51,801.74L608.74,802.15L608.44,802.98zM604.18,801.65L604.24,800.77L604.63,800.71L604.59,801.49L604.18,801.65zM603.85,798.9L604.33,799.63L603.97,799.98L603.85,798.9zM604.11,798.5L603.69,798.17L603.88,797.85L604.11,798.5zM607.51,797.22L608.24,797.39L607.85,797.91L607.11,797.78L607.51,797.22zM607.76,796.15L607.29,795.67L607.92,795.69L607.76,796.15zM600.13,794.93L601.17,795.04L601.69,795.96L601.44,796.8L599.81,796.87L599.97,795.53L600.13,794.93zM601.57,794.57L601.45,795.02L601.02,794.88L601.57,794.57zM602.76,793.44L602.42,793.83L601.92,793.17L602.76,793.44zM596.56,792.09L596.68,791.48L597.02,791.51L596.84,792.29L596.56,792.09zM595.43,790.61L595.68,791.18L595.32,791.48L595.43,790.61zM598.78,788.45L598.95,789.64L598.46,789.75L597.9,788.5L598.78,788.45zM598.87,787.63L599.18,788.38L599.01,788.67L598.49,788.2L598.87,787.63zM582.03,787.12L581.65,787.48L581.76,786.46L582.03,787.12zM597.15,785.81L597.55,786.63L596.65,786.87L596.35,786.07L597.15,785.81zM580.63,785.53L580.01,785.8L580.38,784.45L580.63,785.53zM596.41,783.74L596.83,784.54L596.52,785.28L595.62,785.41L595.6,783.83L596.41,783.74zM581.25,783.64L581.67,784.82L581.09,785.07L580.75,784.02L581.25,783.64zM593,781.67L593.41,782.51L592.85,782.82L592.44,782.02L593,781.67zM584.18,780.52L584.73,780.17L585.2,781.56L584.85,782.37L584.04,782.95L583.62,782.22L583.89,780.91L584.18,780.52zM591.25,780.36L591.79,780.92L591.05,781.62L590.41,780.58L591.25,780.36zM589.56,776.23L590.23,778.07L589.88,780.11L589.33,780.39L588.68,779.64L588.01,779.46L587.24,777.02L588.25,775.67L589.56,776.23zM585.35,767.98L586.65,775.73L585.72,776.08L584.91,779.47L584.01,780.44L582.01,780.6L580.81,779.51L580.54,778.41L578.28,778.64L577.88,779.39L576.35,780.27L574.82,778.74L575.01,777.73L574.03,775.81L571.62,774.72L569.1,774.73L568.27,774.29L567.51,773.06L567.51,771.35L558.93,764.16L561.02,763.42L560.75,762.12L559.36,761.08L559.69,758.95L558.8,757.5L559.39,756.03L558.7,753.36L559.08,751.96L558.82,751.03L559.4,748.82L564.56,748.05L565.91,747.56L566.79,746.47L566.92,745.15L567.65,743.88L569.06,743.9L571.61,743.17L574.3,743.29L576.34,742.39L578.28,742.62L580.12,743.42L583.01,745.92L584.42,746.58L584.99,747.51L583.67,751.63L584.04,752.84L582.99,753.77L582.57,755.44L582.68,757.15L582.01,758.51L582.02,759.78L583.36,760.14L583.09,760.83L583.4,762.28L584.67,763.43L584.69,765.63L585.35,767.98z",
      correctX: 585,
      correctY: 825,
      isPlaced: false,
      fillColor: "#0369A1",
      strokeColor: "#075985"
    },
    {
      id: 109,
      name: "Uasin Gishu",
      svgPath: "M199.7,379.01L198.78,380.27L196.6,380.97L196.16,381.51L196.53,382.51L198.82,384.33L198.82,386.43L199.55,388.92L200.81,390.27L202.14,390.42L205.4,389.65L207.83,390.72L208.74,389.91L210.43,389.96L212.99,391.37L214.1,391.57L215.87,388.9L217.93,389.13L220.48,391.1L223.09,390.27L223.67,390.77L222.67,394.1L222.67,396.04L223.02,396.95L225.95,399.07L225.48,401.44L226.16,402.05L226.88,401.64L228.17,402.7L228.46,404.56L229.2,403.88L230.1,404.01L230.5,404.8L232.24,405.3L233.58,406.78L235.3,406.94L236.72,407.81L237.19,408.93L242.29,408.75L243.49,409.85L243.12,411.97L243.92,413.08L245.8,414.04L247.92,415.99L247.69,417.5L246.02,418.53L245.97,419.84L247.73,421L247.83,421.93L246.86,422.98L247.28,424.51L246.79,425.53L242.63,425.84L241.89,428.1L240.03,429.23L239.71,431.01L235.62,433.61L232.51,433.58L231.31,435.41L230.78,435.46L228.91,434.16L229.09,433.2L228.13,431.24L227.33,431.24L226.08,432.28L224.71,432.47L223.14,433.34L222.58,433.1L222.31,431.74L220.69,430.67L220.19,429.82L220.15,428.7L219.63,427.78L218.05,426.91L217.05,427.19L215.67,428.83L213.5,428.8L213.3,427.81L211.18,427.32L210.25,425.67L210.42,423.26L209.48,422.56L208.59,422.58L207.5,421.5L207.12,420.5L206.32,420.11L204.5,420.22L203.5,418.58L202.12,418.4L201.85,417.44L200.98,417.2L200.42,416.08L199.5,415.89L197.55,416.33L195.64,413.26L195.9,409.09L198.62,406.43L199.72,403.52L198.95,400.65L197.14,396.61L196.1,394.9L195.8,389.94L195.43,388.49L195.75,386.9L196.34,386.47L197.95,383.53L199.12,381.44L198.85,379.2L199.7,379.01z",
      correctX: 220,
      correctY: 410,
      isPlaced: false,
      fillColor: "#7DD3FC",
      strokeColor: "#0369A1"
    },
    {
      id: 110,
      name: "Turkana",
      svgPath: "M149.14,111.95L151.11,115.82L154.3,118.11L154.73,119.75L156.47,122.18L156.8,123.28L156.47,126.66L157.14,127.51L157.12,129.07L156.43,130.19L156.81,131.73L158.11,133.11L158.33,134.61L159.3,135.3L159.54,136.44L160.91,137.71L161.6,139.43L162.98,137.71L163.47,137.7L164.52,141.49L164.48,142.91L166.81,142.83L168.45,144.39L168.78,146.28L174.36,146.39L177.39,148.52L179.63,147.81L180.98,148.63L182.93,152.34L184.15,154.15L185.55,154.72L186.55,157.26L185.12,158.46L184.64,159.82L184.03,160.41L184.05,161.44L182.62,162.09L183.41,163.7L183.74,165.62L182.97,167.28L183.46,169.26L184.58,170.73L184.48,172.38L185.27,173.78L185.3,177.56L186.1,178.44L186.5,180.05L187.55,180.66L188.12,181.71L187.95,182.26L186.39,182.53L185.81,183.49L185.93,186.46L187.84,187.98L189.05,191.44L186.95,193.76L186.92,194.89L188.61,195.5L189.3,198.04L188.98,198.88L188.06,199.18L187.42,198.7L186.1,199.13L184.5,198.31L184.18,197.46L182.5,196.47L179.43,196.48L178.03,196.82L176.5,196.54L175.31,197.28L174.78,198.29L174.11,198.36L173.54,197.55L172.34,198.03L171.57,199.12L169.28,200.49L166.5,201.12L165.77,201.93L165.37,204.46L165.56,205.15L164.8,206.23L162.67,206.95L161.11,205.35L160.8,207.37L160.12,208.48L157.93,209.11L155.54,210.45L153.62,212.95L150.54,212.94L148.61,211.92L148.58,209.57L149.45,206.57L148.69,204.14L148.67,201.55L146.98,199.37L147.5,198.25L145.93,196.37L146,194.66L146.69,193.66L145.12,191.82L144.7,191.83L143.8,193.2L142.9,192.94L142.61,191.77L141.68,191.66L141.4,190.57L140.1,189.88L139.95,188.68L140.61,187.21L140.52,185.08L139.8,183.16L139.98,182.17L141.45,180.92L140.73,179.22L140.89,178.54L142.61,176.53L143.33,175.68L144.23,175.64L145.11,175.02L144.67,174.17L145.23,172.48L145.98,171.92L146.33,170.7L145.08,169.48L144.45,168.4L143.48,166.33L142.46,165.58L141.3,163.67L139.45,162.83L138.08,160.82L136.3,160.17L134.73,158.48L133.8,158.39L131.45,156.25L130.79,154.44L130.06,153.75L128.3,153.21L127.7,152.32L127.11,150.31L126.1,149.53L127.11,147.7L127.22,146.07L126.78,144.42L126.86,143.19L127.69,142.19L128.79,140.19L129.55,138.3L129.55,137.05L130.3,136.18L130.39,135.19L131.38,134.2L131.19,133.26L129.86,133.94L129.78,133.05L130.42,131.43L130.28,128.7L129.03,127.78L128.3,126.77L127.19,126.46L126.2,125.27L126.26,124.01L125.78,123.03L124.3,121.7L123.11,119.1L123.32,116.03L123.88,113.94L126.08,111.77L127.64,110.94L129.22,109.33L129.88,111.07L131.68,111.27L137.57,118.2L138.55,118.28L138.72,117.37L139.11,117.37L139.3,116.45L140.41,116.37L140.8,115.38L141.55,115.37L141.64,112.62L142.39,112.37L142.97,113.12L143.47,112.11L144.47,112.11L146.08,111.04L146.97,111.95L149.14,111.95z",
      correctX: 160,
      correctY: 165,
      isPlaced: false,
      fillColor: "#0284C7",
      strokeColor: "#075985"
    }
  ],
  
  // Nigeria regions
  1: [
    {
      id: 1,
      name: "Abia",
      svgPath: "M290.66,491.93L291.26,492.7L296.09,491.81L298.8,492.08L300.85,493.42L301.18,494.88L301.18,494.88L301.25,499.24L300.7,502.1L300.75,502.83L301.69,503.86L315.78,504.72L317.02,506.58L317.24,508.77L317.94,509.81L321.15,512.14L322.49,512.35L322.49,512.35L323.57,513.64L322.98,517.36L323.13,521.14L324.5,525.77L325.23,527.45L326.94,529.45L327.7,532L327.1,533.21L323.68,532.45L323.68,532.45L320.99,529.84L318.45,529L315.69,526.86L315.11,524.75L313.48,523.61L310.09,516.92L308.15,515.84L307.44,513.61L306.05,512.86L304.21,510.76L303.08,509.96L301.78,507.76L296.84,507.25L295.08,506.4L293.5,504.82L291.67,504.18L290.87,502.44L291.24,500.03L289.43,498.76L288.71,496.46L288.98,495.59L290.66,491.93z",
      correctX: 300,
      correctY: 510,
      isPlaced: false,
      fillColor: "#EF4444",
      strokeColor: "#991B1B"
    },
    {
      id: 2,
      name: "Adamawa",
      svgPath: "M682.29,187.44L682.16,189.27L681.34,191.03L680.32,192.6L679.22,193.43L677.45,196.33L676.09,201.22L673.43,203.67L672.95,204.77L672.34,207.78L673.06,211.39L673.83,212.45L673.83,214.15L672.22,215.81L671.96,220.42L670.99,222.09L671.12,225.54L670.34,227.48L668.29,230.05L668.03,233.07L666.42,234.11L664.98,236.72L659.11,237.88L654.93,243.76L655.08,244.74L656.62,246.36L656.66,247L655.51,249.74L653.66,251.13L653.63,252.9L654.32,254.5L657.05,256.35L657.05,258.58L656.59,261.33L656.49,267.55L657.42,269.2L657.35,270.58L665.07,270.75L669.49,268.98L671.96,268.89L672.38,269.8L677.1,271.06L679.26,270.04L681.61,270.26L684.03,270.01L686.73,267.81L687.77,267.27L689.83,267.47L691.84,267.05L696.63,264.88L698.45,264.71L701.51,265.26L703.38,264.54L706.55,264.56L712.12,261.9L712.12,261.9L712.66,261.34L713.4,258.93L713.81,257.86L714.86,257.36L712.74,254.01L712.98,252.06L714.95,249.54L715.56,247.64L712.46,242.63L712.55,241.15L711.35,238.84L711.42,234.5L710.72,232.04L709.13,229.82L705.66,224.51L703.81,223.74L703.32,222.04L703.7,217.81L702.76,215.47L702.88,211.44L702.2,209.1L701.85,207.11L702.14,201.53L702.62,200.75L703.64,200.98L704.09,198.89L701.25,196.28L702.83,193.55L702.05,186.6L701.32,185.57L693.11,185.05L692.26,182.32L692.52,181.47L693.41,181.33L693.92,180.26L693.38,178.3L693.68,177.4L696.3,175.51L697.05,172.12L696.65,170.76L696.95,169.82L699.08,165.18L699.77,162.97L699.46,160.34L699.72,158.36L700.26,157.05L700.29,155.27L699.66,152.99L699.01,152.27L697.15,150.82L694.82,149.63L693.39,148.22L690.49,143.1L688.62,141.27L683.8,139.35L681.29,139.34L679.03,140.44L678.14,141.55L677.61,143.54L677.21,148.56L674.3,148.22L672.03,149.39L671.18,149.9L666.93,147.78L669.31,145.33L670.28,145.09L672.17,142.49L672.91,141.84L682.29,187.44z",
      correctX: 680,
      correctY: 220,
      isPlaced: false,
      fillColor: "#F97316",
      strokeColor: "#9A3412"
    },
    {
      id: 3,
      name: "Akwa Ibom",
      svgPath: "M350.44,577.33l0.88,2.09l-0.76,0.82l-1.07,0.22l-0.22,-1.24l0.56,-0.1l0.35,-0.9L350.44,577.33zM298.88,566.26l-0.12,-1.85l-1.79,-3.36l0.67,-1.63l-0.02,-1.17l-0.59,-0.67l-0.22,-1.47l0.47,-0.65l-0.09,-0.77l2.52,-1.94l1.18,-2.89l-0.66,-2.49l0.02,-2.41l1.21,-5.81l-1.07,-1.94l0.07,-0.75l1.1,-0.56l1.56,0.19l0.64,-0.94l0.76,-2.85l2.74,-2.04l2.34,-3.63l4.71,-1.93l0.39,0.27l0.19,1.65l-0.44,1.28l-0.06,1.75l-0.7,1.87l-1.24,1.22l0.11,0.75l2.3,1.25l1.21,2.8l-1.47,2.47l-0.98,3.16l0.1,2.69l0.85,2.48l0.87,0.98l0.83,-0.5l0.73,-1.22l0.65,-0.38l0.67,0.15l0.07,0.88l-0.82,1.59l-0.06,1.57l1.32,0.88l2.98,0.78l-0.73,1.48l-3.57,1.22l-1.07,0.83l-0.85,1.36l-0.95,0.29l-1.05,-0.58l-0.85,0.15l-0.84,1.24l0.37,1.21l-0.37,0.97l-0.78,0.4l-0.73,0.98l-1.84,0.05L313,570.04l-0.9,0.5l-0.06,0.63l-0.73,0.63l-1.46,0.23l-1.51,-0.28l-2.23,0.18l-1.09,-0.68l-0.9,0.75l-0.88,-0.06l-1.18,-0.76l-1.07,0.15l-1.12,-0.91l-0.94,0.32L298.88,566.26zM310.13,584.89l0.97,0.5l0.92,-0.19l0.88,-0.14l0.33,0.28l-3.58,0.75l-0.49,-0.59L310.13,584.89zM302.56,585.59v0.01l0,0l-0.02,-0.02l0,0L302.56,585.59z",
      correctX: 320,
      correctY: 560,
      isPlaced: false,
      fillColor: "#FACC15",
      strokeColor: "#854D0E"
    },
    {
      id: 4,
      name: "Anambra",
      svgPath: "M262.32,445.18L262.76,445.58L262.85,449.2L266.68,449.07L269.12,450.48L271.17,450.56L274.9,452.26L275.26,453.05L274.01,456.5L273.26,457.58L271.57,458.72L269.72,461.2L269.96,462.16L269.34,462.99L268.91,465.34L269.3,465.88L273.15,467.04L274.57,468.84L275.91,472.48L277.22,474.33L276.92,475.29L276.1,475.58L276.51,476.95L276.01,478.57L276.73,479.31L278.62,478.18L279.23,478.31L279.82,480.89L281.15,481.52L280.8,483.67L282.68,487.46L282.86,489.31L281.1,490.33L278.11,493.23L277.28,493.26L277.28,493.26L275.95,493.69L274.29,490.22L274.06,486.66L274.25,484.87L272.61,484.3L272.1,483.79L271.66,484.52L269.96,485.24L267.71,484.85L265.66,483.79L264.49,481.93L260.53,480.23L260.04,479.63L259.93,478.59L261.13,469.48L260.71,463.13L260.91,461.15L260.89,457.01L261.41,447.93L262.07,446.08L262.32,445.18z",
      correctX: 270,
      correctY: 470,
      isPlaced: false,
      fillColor: "#84CC16",
      strokeColor: "#3F6212"
    },
    {
      id: 5,
      name: "Bauchi",
      svgPath: "M491.59,87.79L499.33,93.98L500.47,96.91L501.24,103.99L501.05,105.8L504.21,110.46L504.42,117.2L504.75,119.9L505.7,122.61L505.9,126.48L514.25,147.39L514.02,152.31L512.97,155.03L511.98,161.81L513.61,163.34L516.65,163.71L516.65,163.71L515.85,163.95L513.14,167.71L507.1,170.99L504.53,174.69L502.52,176.44L501.03,177.2L497.12,178.08L495.68,179.44L494.3,181.47L493.33,186.41L490.72,193.84L487.11,198.91L486.91,200.29L494.29,203.28L495.43,204.27L499.26,205.52L499.26,205.52L500.01,206.51L500.05,207.79L500.05,213.07L504.19,213.11L504.89,215.71L505.68,216.95L508.81,220.65L510.33,221.19L512.28,221.07L513.15,222.35L513.27,225.93L514.77,229.25L516,229.25L517.05,226.06L532.74,225.93L536.95,224.11L539.66,224.19L541.29,225.41L546.31,225.34L547.33,225.09L549.43,223.21L553.96,220.87L555.33,220.78L558.56,222.69L558.56,222.69L557.96,227.82L555.53,224.31L554.72,221.48L559.9,213.92L560.52,210.9L559.17,207.6L559.17,207.6L552.39,207.61L551.32,200.65L552.52,188.8L551.85,183.93L548.17,180.55L546.59,181.57L547.59,180.03L544.17,176.45L539.42,170.05L530.93,163.79L528.75,162.5L525.77,161.49L521.73,161.32L517.56,162.83L516.65,163.71L516.65,163.71L504.02,162.29L499.75,160.14L498.71,158.6L497.28,150.26L497.66,149.45L498.43,149.43L499.15,148.6L498.41,146.82L495.06,141.23L493.95,139.86L488.75,139.68L488.14,126.3L483.83,121.3L481.26,117.7L478.29,114.76L476.21,107.94L472.34,107.66L469.32,106.35L466.11,102.22L464.92,100.14L463.5,94.9L463.86,113.96L470.57,93.37L475.11,91.42L478.59,90.87L479.58,91.69L480.41,93.33L480.53,94.72L491.59,87.79z",
      correctX: 510,
      correctY: 160,
      isPlaced: false,
      fillColor: "#06B6D4",
      strokeColor: "#0E7490"
    },
    {
      id: 6,
      name: "Benue",
      svgPath: "M309.31,368.03L318.44,370.51L326.95,371.76L335.66,375.31L340.58,378.13L345.83,379.12L346.9,378.98L350.22,381.78L355.55,384.01L356.69,382.91L356.78,381.55L352.08,369.91L352,367.39L353.02,364.53L354.26,363.12L358.21,360.92L359.59,360.64L362.18,360.46L364.86,360.9L374.95,364.62L381.81,366.17L386.69,366.58L390.65,366.36L390.66,365.66L402.45,374.59L402.45,374.59L398.66,380.56L400.56,381.13L406.68,378.5L414.15,377.55L422.33,378.03L429.81,380.61L432.3,382.88L435.77,389.11L438.21,390.29L439.21,393.17L442.75,396.68L442.75,396.68L436.74,398.1L433.92,399.7L433.03,400.67L433.52,402.81L431.87,404.89L426.76,406.53L424.46,408.55L421.42,414.78L418.67,418.42L414.66,419.96L411.68,422.03L411.34,422.53L411.26,424.1L409.98,428.26L408.25,430.38L408.14,431.45L409.4,436.72L409.07,438.23L409.07,438.23L397.9,437.27L389.72,434.93L377.8,430.15L374.15,424.67L369.32,418.97L361.94,415.38L361.14,413.46L361.67,411.86L361.3,410.97L359.62,410.79L357.29,409.35L355.79,407.33L355.45,405.48L352.47,403.67L349.11,399.35L343.96,396.52L341.55,396.27L339.65,398.66L339.28,400.21L337.76,401.32L334.33,402.85L332.52,402.51L329.33,403.15L328.35,404.81L327.56,405.15L323.65,403.63L323.65,403.63L322.71,402.74L321.31,394.2L320.38,392.07L318.82,390.13L318.14,388.21L318.74,384.82L319.54,382.74L320.98,380.85L321.03,379.09L318.83,377.13L318.01,375.28L317.58,374.86L314.25,374.72L311.47,371.82L309.31,368.03z",
      correctX: 370,
      correctY: 390,
      isPlaced: false,
      fillColor: "#4F46E5",
      strokeColor: "#312E81"
    },
    {
      id: 7,
      name: "Borno",
      svgPath: "M661.8,11.35L662.5,17L661.67,20L665.16,26.26L664.96,28.78L664.5,29.27L664.78,27.1L663.74,28.43L663.52,30.35L665.9,32.9L668.36,33.51L667.71,34.18L667.99,34.72L668.77,34.91L673.23,42.44L676.06,45.52L677.11,45.74L678.83,46.7L680.46,47.9L684.33,48.65L684.59,49.51L684.01,49.5L683.45,50.6L683.25,49.56L682.59,50.14L681.85,50.1L683.29,51.7L683.56,53.46L687.44,52.3L689.75,49.69L692.22,47.67L693.82,47L692.74,48.76L692.89,49.21L693.54,49.02L694.62,45.72L696.97,44.71L699.52,43.88L700.87,43.91L703.42,43.18L705.18,43.04L707.11,42.6L708.57,42.01L709.95,40.54L710.75,40.23L712.23,40.21L713.26,39.72L714.39,38.79L714.89,38.05L715.42,36.08L714.4,35.05L714.22,33.88L714.77,32.73L715.85,31.59L716.46,30.73L716.75,29.02L717.04,28.59L718.12,28.2L724.44,28.16L730.77,29.61L731.24,31.25L731.07,33.08L730.38,33.95L730.75,35.66L732.92,35.71L733.92,35.38L734.94,34.61L737.71,32.27L739.03,31.91L741.51,32.11L743.34,33.04L744.07,33.82L744.42,35.01L744.36,36.42L745.69,37.39L746.86,39.7L747.28,40.55L748.21,40.96L751.97,39.9L754.22,39.77L755.84,36.72L757.5,35.44L764.66,32.79L767.35,33.03L769.25,33.65L772.17,35.55L772.17,35.55L768.91,39.5L767.1,40.84L766.37,43.61L765.21,44.68L764.28,46.5L762.84,48.19L759.89,49.64L756.21,54.33L755.62,57.73L755.69,59.97L756.66,64.83L756.68,69.04L756.42,70.5L754.94,71.98L753.58,74.22L751.85,80.48L750.91,82.6L748.35,85.81L747.58,88.34L747.72,90.35L746.16,92.64L745.59,95.72L746.24,99.03L747.97,102.1L748.56,104.27L748.33,109.31L747.69,112.69L747.85,115.58L748.68,118.21L748.53,122.03L748.9,127.35L750.35,133.04L751.78,135.5L753.3,136.17L756.58,137.44L757.62,139.13L757.95,141.38L757.92,145.37L757.5,147.29L756.1,149.84L754.81,155.46L754.76,158.83L754.05,164.29L754.28,168.01L754.88,169.95L755.93,171.57L758.64,173.54L761.51,175.78L762.15,176.63L763.09,180.03L764.14,181.9L764.98,184.06L764.76,186.55L764.25,188.33L762.03,189.23L755.78,189.3L754.76,189.53L753.32,190.81L752.74,192.86L751.37,193.51L751.04,197.08L751.25,199.91L746.16,199.21L741.85,196.42L738.48,196.01L737.83,197.17L736.88,201.01L735.21,202.96L732.88,204.67L731.69,206.46L729.61,213.11L727.74,217.39L725.88,220.29L723.01,222.75L720.69,226.1L719.23,226.98L718.12,228.2L716.94,230.23L715.91,230.76L714.8,232.43L713.34,236.71L713.38,241.42L712.55,241.15L712.46,242.63L715.56,247.64L714.95,249.54L712.98,252.06L712.74,254.01L714.86,257.36L713.81,257.86L713.4,258.93L712.66,261.34L712.12,261.9L712.12,261.9L706.55,264.56L703.38,264.54L701.51,265.26L698.45,264.71L696.63,264.88L691.84,267.05L689.83,267.47L687.77,267.27L686.73,267.81L684.03,270.01L681.61,270.26L679.26,270.04L677.1,271.06L672.38,269.8L671.96,268.89L669.49,268.98L665.07,270.75L657.35,270.58L657.42,269.2L656.49,267.55L656.59,261.33L657.05,258.58L657.05,256.35L654.32,254.5L653.63,252.9L653.66,251.13L655.51,249.74L656.66,247L656.62,246.36L655.08,244.74L654.93,243.76L659.11,237.88L664.98,236.72L666.42,234.11L668.03,233.07L668.29,230.05L670.34,227.48L671.12,225.54L670.99,222.09L671.96,220.42L672.22,215.81L673.83,214.15L673.83,212.45L673.06,211.39L672.34,207.78L672.95,204.77L673.43,203.67L676.09,201.22L677.45,196.33L679.22,193.43L680.32,192.6L681.34,191.03L682.16,189.27L682.29,187.44L682.29,187.44L672.91,141.84L672.17,142.49L670.28,145.09L669.31,145.33L666.93,147.78L671.18,149.9L672.03,149.39L674.3,148.22L677.21,148.56L677.61,143.54L678.14,141.55L679.03,140.44L681.29,139.34L683.8,139.35L688.62,141.27L690.49,143.1L693.39,148.22L694.82,149.63L697.15,150.82L699.01,152.27L699.66,152.99L700.29,155.27L700.26,157.05L699.72,158.36L699.46,160.34L699.77,162.97L699.08,165.18L696.95,169.82L696.65,170.76L697.05,172.12L696.3,175.51L693.68,177.4L693.38,178.3L693.92,180.26L693.41,181.33L692.52,181.47L692.26,182.32L693.11,185.05L701.32,185.57L702.05,186.6L702.83,193.55L701.25,196.28L704.09,198.89L703.64,200.98L702.62,200.75L702.14,201.53L701.85,207.11L702.2,209.1L702.88,211.44L702.76,215.47L703.7,217.81L703.32,222.04L703.81,223.74L705.66,224.51L709.13,229.82L710.72,232.04L711.42,234.5L711.35,238.84L665.21,138.41L662.11,123.1L659.43,110.73L658.94,108.03L658.94,105.15L659.71,102.43L662.13,97.43L661.8,94.42L660.61,91.78L657.58,88.6L657.13,88.1L655.39,85.74L653.9,80.06L653.98,78.99L653.13,76.03L652.05,74.33L649.67,71.95L648.99,69.49L649.31,68.29L651.75,65.81L652.49,64.05L651.94,60.22L652.14,58.12L652.76,56.48L655.65,51.81L655.76,50.5L652.7,43.9L652.77,38.71L652.15,33.67L651.02,30.9L649.07,28.25L648.51,26.33L648.95,23.67L651.48,18.41L653.87,16.59L656.8,13.87L657.72,11.67L661.8,11.35z",
      correctX: 700,
      correctY: 130,
      isPlaced: false,
      fillColor: "#DDD6FE",
      strokeColor: "#5B21B6"
    },
    {
      id: 8,
      name: "Bayelsa",
      svgPath: "M250.87,579.58l-0.21,-0.62l-0.68,0.1l-3.96,-2.6l-1.2,-4.38l-1.38,-1.87l-1.99,-0.02l-6.54,2.54l-1.04,-0.26l-0.35,-1.94l0.42,-1.46l-3.31,-1.44l-0.5,-0.83l0.07,-4.34l1.9,-2.67l0.76,-2.05l0.03,-1.27l-1.29,0.16l-0.84,-0.78l1.33,-4.44l4.49,-7.84l2.77,0.17l0.55,-0.5l0.75,-2.49l1.54,-0.79l-0.23,-1.81l1.58,-1.07l0.95,-1.48l-0.03,-1.94l-0.63,-1.54l-0.76,-0.58l-1.92,-0.83l-2.94,0.49l-1.04,-0.28l0.77,2.47l-1.2,0.85l-5.08,2.19l-3.49,-0.44l-2.7,-1.29l-1.81,-0.08l-3.95,1.72l-3.3,0.07l-0.78,0.54l-2.52,3.58l-0.18,1.3l-0.85,1.5l-0.2,1.54l0.32,1.47l1.19,1.56l1.88,1.13l1.07,0.22l0.13,0.75l-1.69,1.43l-0.36,1.21l-0.32,3.48l-0.52,1.51l-1.76,2.64l-0.72,2.64l-0.28,2.41l0.49,3.36l0.98,2.2l1.53,1.66l2.27,4.03l1.51,1.84l3.84,3.57l2.71,0.49l1.94,-0.76l2.82,0.73l3.63,2.29l3.09,0.86l3.58,-1.84l0.82,-0.01l0.54,0.71l1.31,-0.25l0.7,-0.77l1.19,-0.06l1.03,0.61l1.5,-0.12l1.51,0.9l1.41,0.01l1.14,-0.78l1.16,-1.79L250.87,579.58z",
      correctX: 230,
      correctY: 560,
      isPlaced: false,
      fillColor: "#8B5CF6",
      strokeColor: "#5B21B6"
    },
    {
      id: 9,
      name: "Cross River",
      svgPath: "M348.13,451.4L351.12,450.91L353.48,448.95L354.84,447.2L356.76,446.75L358.82,447.42L362.66,447.56L365.79,446.73L368.93,444.81L368.16,440.31L369.68,439.11L371.79,438.44L374.1,437.85L376.21,437.92L381.64,439.61L390.28,444.99L390.84,446.63L390.18,451.4L391.39,452.29L395.77,452.73L405.34,450.49L408.43,450.71L409.92,451.43L415.45,457.16L420.33,463.79L420.98,465.34L420.98,465.34L418.81,473.68L413.66,471.47L412.88,473.31L412.86,475.29L411.7,476.8L409.96,477.47L409.47,478.21L409.52,482.67L407.91,485.61L407.28,488.63L406.84,496.1L404.89,500.07L402.87,507.18L399.68,516.48L398.98,522.77L399.02,529.25L398.11,532.12L394.45,537.45L393.48,537.75L392.51,537.33L391.03,535.71L390.77,532.92L389.51,530.45L385.71,525.35L382.32,522.68L379.72,521.75L376.83,522.67L372.89,525.6L368.6,530.78L367.96,532.24L366.14,548.59L366.14,548.59L364.31,549.42L359.22,550.11L358.28,549.35L358.28,549.35L355.13,545.04L353.94,542.9L351.76,542.05L350.96,540.65L351.09,539.1L350.08,537.09L347.5,534.63L345.83,531.63L344.94,526.39L344.34,523.22L344.3,514.96L343.68,510.34L344.35,508.17L344.35,506.52L343.85,505.04L334.89,499.48L334.6,496.97L335.43,493.62L336.37,492.49L336.47,491.14L336.24,488.49L336.63,487.47L339.45,485.08L341.08,482.25L341.1,480.3L341.76,478.7L342.99,478.05L343.72,476.7L344.61,476.15L344.93,474.47L344.78,471.32L346.15,466.72L347.03,464.91L347.98,464.29L348.17,463.48L347.36,459.37L347.44,456.22L348.13,451.4z",
      correctX: 380,
      correctY: 500,
      isPlaced: false,
      fillColor: "#A78BFA",
      strokeColor: "#5B21B6"
    },
    {
      id: 10,
      name: "Delta",
      svgPath: "M252.1,480.23l-1.48,-7.29l0.08,-1.37l-1.13,-1.13l-2.13,-9.57l-1.88,2.04l-4.1,-0.38l-3.73,0.81l-8.19,5.12l-7.35,3.1l-4.03,4.53l-0.64,0.05l-2.58,-3.94l-1.01,-0.42l-1.67,-0.31l-1.78,1.58l-0.89,2.03l-0.15,2.37l0.4,0.75l1.46,0.81l0.54,4.82l2.03,3.59l1.96,2.42l1.88,1.46l2.23,0.81l0.29,1.75l-0.7,3.24l-1.55,1.91l-1.63,1.66l-3.08,2.03l-2.29,3.07l-2.78,1.99l-1.81,0.6l-5.23,1.04l-2.13,-0.56l0.7,-1.8l-1.6,-1.61l2.04,-4.03l-0.47,-0.83l-3.91,-2.3l-0.93,-1.47l-0.41,-3.84l-1.37,-2.41l-1.93,-1.88l-2.14,-0.98l-1.76,0.15l-0.16,0.85l0.46,4.01l-0.69,0.52l-3.22,0.27l-2.04,-1.47l-1.73,-0.42l-1.4,0.36l-1.07,1.21l-1.62,3.18l1.98,2.59l1.16,3.58l-0.76,1.93l-0.88,1.11l-0.07,1.26l1.15,3.03l1.26,1.99l1.32,1.63l1.26,2.22l0.49,2.09l0.13,4.88l0.96,6.15l-0.04,2.21l-1.05,1.08l0.23,0.84l1.27,0.73l1.6,2.2l1.6,1.21l1.06,0.35l0.78,-0.21l0.89,-0.95l0.76,-2.05l-0.07,-2.03l0.8,-1.06l1.6,-1.19l0.57,0.21l1.29,3.01l2.62,3l1.79,1.1l0.76,0.98l1.26,2.22l1.17,1.05l1.98,1.06l1.44,0.23l0.64,-0.74l-0.13,-1.02l-0.69,-0.6l-0.81,-1.31l1.48,-0.36l3.01,2.09l1.76,2.06l1.89,1.07l2.36,0.93l2.18,0.37l2.13,-0.43l1.08,-0.65l0.89,-1.94l0.87,-0.5l5.02,-1.14l2.21,-1.29l1.11,-1.21l0.3,-1.89l0.92,-0.41l1.04,0.12l0.57,0.76l0.15,1.9l0.49,0.87l1.55,0.44l1.48,-0.73l2.01,-2.48l2.51,0.39l1.09,-0.08l2.43,-1.27l1.48,-1.63l-0.02,-2.81l0.47,-1.5l2.21,-1.84l0.94,-1.8l0.07,-2.5l-1.17,-1.36l3.37,-7.49l2.05,-2.84l1.63,-1.04l1.13,-1.59l0.85,-2.16l-0.17,-2.11l0.39,-1.34l-0.68,-3.54l0.2,-0.94l0.91,-0.79l1.26,-0.38l1.83,0.06l1.49,-1.92l1.21,-3.19l0.22,-1.47l-0.41,-1.16l2.14,-5.73l0.18,-1.12l-0.56,-1.3L252.1,480.23z",
      correctX: 215,
      correctY: 510,
      isPlaced: false,
      fillColor: "#C4B5FD",
      strokeColor: "#5B21B6"
    }
  ]
};

// modify the interface with any CRUD methods
// you might need

export interface IStorage {
  // User methods
  getUser(id: number): Promise<User | undefined>;
  getUserByUsername(username: string): Promise<User | undefined>;
  createUser(user: InsertUser): Promise<User>;
  
  // Country methods
  getAllCountries(): Promise<Country[]>;
  getCountry(id: number): Promise<Country | undefined>;
  createCountry(country: InsertCountry): Promise<Country>;
  
  // Region methods
  getRegionsByCountry(countryId: number): Promise<Region[]>;
  createRegion(region: InsertRegion): Promise<Region>;
  
  // Game session methods
  createGameSession(session: InsertGameSession): Promise<GameSession>;
  completeGameSession(id: number, hintsUsed: number, score: number): Promise<GameSession | undefined>;
  getTopScoresByCountry(countryId: number, limit?: number): Promise<GameSession[]>;
}

export class MemStorage implements IStorage {
  private users: Map<number, User>;
  private countries: Map<number, Country>;
  private regions: Map<number, Region[]>;
  private gameSessions: Map<number, GameSession>;
  private userIdCounter: number;
  private countryIdCounter: number;
  private regionIdCounter: number;
  private gameSessionIdCounter: number;

  constructor() {
    this.users = new Map();
    this.countries = new Map();
    this.regions = new Map();
    this.gameSessions = new Map();
    
    this.userIdCounter = 1;
    this.countryIdCounter = 1;
    this.regionIdCounter = 200; // Start with a higher ID to avoid conflicts with sample regions
    this.gameSessionIdCounter = 1;
    
    // Initialize with sample data
    this.initializeSampleData();
  }
  
  // Generate dummy regions to fill up to the required count
  private generateDummyRegions(countryId: number, baseRegions: Region[], targetCount: number): Region[] {
    const result = [...baseRegions];
    const baseCount = baseRegions.length;
    
    if (baseCount >= targetCount) {
      return result;
    }
    
    // Colors to use for the generated regions
    const colors = [
      { fill: "#EF4444", stroke: "#991B1B" }, // Red
      { fill: "#F97316", stroke: "#9A3412" }, // Orange
      { fill: "#FACC15", stroke: "#854D0E" }, // Yellow
      { fill: "#84CC16", stroke: "#3F6212" }, // Lime
      { fill: "#22C55E", stroke: "#166534" }, // Green
      { fill: "#10B981", stroke: "#065F46" }, // Emerald
      { fill: "#06B6D4", stroke: "#0E7490" }, // Cyan
      { fill: "#0EA5E9", stroke: "#0369A1" }, // Light Blue
      { fill: "#3B82F6", stroke: "#1D4ED8" }, // Blue
      { fill: "#6366F1", stroke: "#4338CA" }, // Indigo
      { fill: "#8B5CF6", stroke: "#5B21B6" }, // Violet
      { fill: "#A855F7", stroke: "#6B21A8" }, // Purple
      { fill: "#D946EF", stroke: "#86198F" }, // Fuchsia
      { fill: "#EC4899", stroke: "#9D174D" }, // Pink
      { fill: "#F43F5E", stroke: "#9F1239" }, // Rose
    ];
    
    // Create additional unique shapes for variety
    // Nigeria SVG paths for state shapes
    const nigeriaPaths = [
      "M100,100 C120,80 150,90 160,120 C170,150 160,180 130,190 C100,200 70,180 60,150 C50,120 70,90 100,100 Z", // Rounded shape
      "M80,80 L150,100 L160,150 L120,180 L60,150 L50,100 Z", // Hexagon-like
      "M100,70 L150,90 L170,130 L150,170 L100,190 L50,170 L30,130 L50,90 Z", // Octagon-like
      "M90,70 C140,80 160,120 150,160 C140,180 110,190 80,180 C40,160 30,120 60,90 C70,80 80,70 90,70 Z", // Organic shape
      "M80,60 L130,60 L170,90 L170,130 L130,160 L80,160 L40,130 L40,90 Z", // Octagon variation 1
      "M70,60 L120,70 L160,90 L180,130 L160,170 L120,190 L70,180 L30,130 L40,80 Z", // Octagon variation 2
      "M100,50 C150,60 180,100 170,150 C160,200 110,220 60,190 C20,160 10,110 50,70 C70,50 80,45 100,50 Z", // Large organic shape
      "M90,80 C130,60 180,70 200,110 C220,150 210,200 160,220 C110,240 60,220 40,170 C20,120 50,70 90,80 Z", // Curved shape
      "M100,80 L120,60 L150,60 L170,80 L180,110 L170,140 L150,160 L120,160 L100,140 L90,110 Z", // Decagon
      "M110,60 L150,80 L160,120 L140,150 L100,160 L60,150 L40,120 L50,80 L90,60 Z", // Nonagon
      "M100,60 L140,70 L170,100 L170,140 L140,170 L100,180 L60,170 L30,140 L30,100 L60,70 Z", // Decagon variation
      "M80,70 L120,50 L160,70 L180,110 L160,150 L120,170 L80,150 L60,110 Z", // Octagon variation 3
    ];
    
    // Kenya SVG paths for county shapes - completely different from Nigeria shapes
    const kenyaPaths = [
      "M120,80 L150,110 L150,150 L120,180 L80,180 L50,150 L50,110 L80,80 Z", // Diamond-like
      "M70,80 L140,80 L170,120 L170,160 L140,200 L70,200 L40,160 L40,120 Z", // Octagon variation
      "M80,90 C110,80 140,90 160,110 C180,130 180,160 160,180 C140,200 110,210 80,200 C50,190 30,170 20,140 C10,110 40,90 80,90 Z", // Kidney shape
      "M90,80 L130,80 L160,110 L160,150 L130,180 L90,180 L60,150 L60,110 Z", // Diamond variation
      "M70,60 L130,60 L160,90 L180,130 L160,170 L130,190 L70,190 L40,170 L20,130 L40,90 Z", // Decagon
      "M100,70 L140,90 L150,130 L130,160 L100,170 L70,160 L50,130 L60,90 Z", // Octagon variation 1
      "M80,70 L120,60 L160,80 L180,120 L160,160 L120,180 L80,170 L60,130 L60,100 Z", // Nonagon
      "M90,60 L140,80 L160,120 L140,160 L90,180 L40,160 L20,120 L40,80 Z", // Octagon variation 2
      "M100,50 C150,60 170,100 160,150 C140,200 90,210 50,180 C20,150 20,100 60,70 C80,50 100,50 100,50 Z", // Curved organic shape 1
      "M90,70 C130,50 170,70 180,110 C190,150 170,190 130,200 C90,210 50,190 40,150 C30,110 60,70 90,70 Z", // Curved organic shape 2
      "M110,60 L150,70 L170,100 L170,140 L150,170 L110,180 L70,170 L50,140 L50,100 L70,70 Z", // Decagon variation
      "M100,60 L140,60 L170,80 L190,110 L190,150 L170,180 L140,200 L100,200 L70,180 L50,150 L50,110 L70,80 Z", // Dodecagon
      "M80,80 L120,60 L160,80 L180,120 L160,160 L120,180 L80,160 L60,120 Z", // Octagon variation 3
      "M90,70 L130,50 L170,70 L190,110 L170,150 L130,170 L90,150 L70,110 Z", // Octagon variation 4
      "M80,60 L110,50 L140,60 L160,80 L170,110 L160,140 L140,160 L110,170 L80,160 L60,140 L50,110 L60,80 Z", // Dodecagon variation
    ];
    
    // Region names for Nigeria states (total 37 including FCT)
    const nigeriaStateNames = [
      "Abia", "Adamawa", "Akwa Ibom", "Anambra", "Bauchi", "Bayelsa", "Benue", "Borno", 
      "Cross River", "Delta", "Ebonyi", "Edo", "Ekiti", "Enugu", "Federal Capital Territory", 
      "Gombe", "Imo", "Jigawa", "Kaduna", "Kano", "Katsina", "Kebbi", "Kogi", "Kwara", 
      "Lagos", "Nasarawa", "Niger", "Ogun", "Ondo", "Osun", "Oyo", "Plateau", "Rivers", 
      "Sokoto", "Taraba", "Yobe", "Zamfara"
    ];
    
    // Region names for Kenya counties (47 counties)
    const kenyaCountyNames = [
      "Mombasa", "Kwale", "Kilifi", "Tana River", "Lamu", "Taita-Taveta", 
      "Garissa", "Wajir", "Mandera", "Marsabit", "Isiolo", "Meru", "Tharaka-Nithi",
      "Embu", "Kitui", "Machakos", "Makueni", "Nyandarua", "Nyeri", "Kirinyaga",
      "Murang'a", "Kiambu", "Turkana", "West Pokot", "Samburu", "Trans-Nzoia",
      "Uasin Gishu", "Elgeyo-Marakwet", "Nandi", "Baringo", "Laikipia", "Nakuru",
      "Narok", "Kajiado", "Kericho", "Bomet", "Kakamega", "Vihiga", "Bungoma",
      "Busia", "Siaya", "Kisumu", "Homa Bay", "Migori", "Kisii", "Nyamira", "Nairobi"
    ];
    
    // Use names appropriate for the country
    const regionNames = countryId === 1 ? nigeriaStateNames : kenyaCountyNames;
    
    // Create a transformation function to make SVG paths unique
    const transformPath = (path: string, scale: number, offsetX: number, offsetY: number): string => {
      // Don't try to transform already transformed paths or empty paths
      if (!path || path.includes('matrix') || path.includes('scale') || path.includes('translate')) {
        return path;
      }
      
      // Apply SVG transform using scale and translation
      return `${path} scale(${scale}) translate(${offsetX},${offsetY})`;
    };
    
    // Generate the additional regions needed
    for (let i = 0; i < targetCount - baseCount; i++) {
      const colorIndex = (baseCount + i) % colors.length;
      
      // Use existing region names if available, otherwise use generic names
      const regionName = regionNames[baseCount + i] || 
                          (countryId === 1 ? `Nigeria State ${baseCount + i + 1}` : `Kenya County ${baseCount + i + 1}`);
                          
      // Get a shape path that's unique
      let svgPath = '';
      
      // Use preset paths appropriate for the country
      const basePaths = countryId === 1 ? nigeriaPaths : kenyaPaths;
      const pathIndex = i % basePaths.length;
      
      // Make each path unique by applying different scaling and translation
      const scale = 0.8 + (Math.random() * 0.4); // Scale between 0.8 and 1.2
      const offsetX = Math.floor(Math.random() * 40) - 20; // Offset between -20 and 20
      const offsetY = Math.floor(Math.random() * 40) - 20; // Offset between -20 and 20
      
      svgPath = basePaths[pathIndex];
      
      // Apply transformation to make the path unique
      svgPath = transformPath(svgPath, scale, offsetX, offsetY);
      
      // Create position variations - ensure they're well spread out
      let posX, posY;
      
      // For Nigeria (using a grid-like arrangement)
      if (countryId === 1) {
        const cols = 6; // Arrange in 6 columns
        const col = (baseCount + i) % cols;
        const row = Math.floor((baseCount + i) / cols);
        posX = 100 + (col * 100) + (Math.random() * 30);
        posY = 100 + (row * 100) + (Math.random() * 30);
      } 
      // For Kenya (using a different grid arrangement)
      else {
        const cols = 7; // Arrange in 7 columns
        const col = (baseCount + i) % cols;
        const row = Math.floor((baseCount + i) / cols);
        posX = 80 + (col * 90) + (Math.random() * 20);
        posY = 80 + (row * 90) + (Math.random() * 20);
      }
      
      // Create the new region with a unique shape and position
      const newRegion: Region = {
        id: this.regionIdCounter++,
        countryId: countryId,
        name: regionName,
        svgPath: svgPath,
        correctX: posX,
        correctY: posY,
        fillColor: colors[colorIndex].fill,
        strokeColor: colors[colorIndex].stroke
      };
      
      result.push(newRegion);
    }
    
    return result;
  }

  private initializeSampleData() {
    // Add initial countries
    initialCountries.forEach(country => {
      this.countries.set(country.id, {
        id: country.id,
        name: country.name,
        slug: country.slug,
        regionsCount: country.regionsCount,
        difficulty: country.difficulty,
        imageUrl: country.imageUrl || null,
        outlinePath: country.outlinePath
      });
      
      // Update counter to avoid ID conflicts
      if (country.id >= this.countryIdCounter) {
        this.countryIdCounter = country.id + 1;
      }
    });
    
    // Add initial regions using the local sampleRegions
    Object.entries(sampleRegions).forEach(([countryIdStr, regionsList]) => {
      const countryId = parseInt(countryIdStr, 10);
      const regionsArray = regionsList.map((region: RegionPiece) => {
        const regionObj: Region = {
          id: region.id,
          countryId: countryId,
          name: region.name,
          svgPath: region.svgPath,
          correctX: region.correctX,
          correctY: region.correctY,
          fillColor: region.fillColor,
          strokeColor: region.strokeColor
        };
        
        // Update counter to avoid ID conflicts
        if (region.id >= this.regionIdCounter) {
          this.regionIdCounter = region.id + 1;
        }
        
        return regionObj;
      });
      
      // Ensure we have the correct number of regions for each country
      let targetCount = 0;
      if (countryId === 1) { // Nigeria
        targetCount = 37;
      } else if (countryId === 2) { // Kenya
        targetCount = 47;
      }
      
      // Generate additional regions if needed
      const completeRegionsArray = this.generateDummyRegions(countryId, regionsArray, targetCount);
      
      this.regions.set(countryId, completeRegionsArray);
    });
  }

  // User methods
  async getUser(id: number): Promise<User | undefined> {
    return this.users.get(id);
  }

  async getUserByUsername(username: string): Promise<User | undefined> {
    return Array.from(this.users.values()).find(
      (user) => user.username === username,
    );
  }

  async createUser(insertUser: InsertUser): Promise<User> {
    const id = this.userIdCounter++;
    const user: User = { ...insertUser, id };
    this.users.set(id, user);
    return user;
  }
  
  // Country methods
  async getAllCountries(): Promise<Country[]> {
    return Array.from(this.countries.values());
  }
  
  async getCountry(id: number): Promise<Country | undefined> {
    return this.countries.get(id);
  }
  
  async createCountry(insertCountry: InsertCountry): Promise<Country> {
    const id = this.countryIdCounter++;
    const country: Country = { 
      ...insertCountry, 
      id,
      imageUrl: insertCountry.imageUrl || null 
    };
    this.countries.set(id, country);
    return country;
  }
  
  // Region methods
  async getRegionsByCountry(countryId: number): Promise<Region[]> {
    return this.regions.get(countryId) || [];
  }
  
  async createRegion(insertRegion: InsertRegion): Promise<Region> {
    const id = this.regionIdCounter++;
    const region: Region = { ...insertRegion, id };
    
    // Add to regions map
    const existingRegions = this.regions.get(region.countryId) || [];
    this.regions.set(region.countryId, [...existingRegions, region]);
    
    return region;
  }
  
  // Game session methods
  async createGameSession(insertSession: InsertGameSession): Promise<GameSession> {
    const id = this.gameSessionIdCounter++;
    const gameSession: GameSession = { 
      ...insertSession, 
      id,
      userId: insertSession.userId || null,
      hintsUsed: insertSession.hintsUsed || 0,
      completedAt: null,
      score: null,
      isCompleted: false
    };
    
    this.gameSessions.set(id, gameSession);
    return gameSession;
  }
  
  async completeGameSession(id: number, hintsUsed: number, score: number): Promise<GameSession | undefined> {
    const session = this.gameSessions.get(id);
    if (!session) {
      return undefined;
    }
    
    const updatedSession: GameSession = {
      ...session,
      completedAt: new Date(),
      hintsUsed,
      score,
      isCompleted: true
    };
    
    this.gameSessions.set(id, updatedSession);
    return updatedSession;
  }
  
  async getTopScoresByCountry(countryId: number, limit: number = 10): Promise<GameSession[]> {
    return Array.from(this.gameSessions.values())
      .filter(session => session.countryId === countryId && session.isCompleted && session.score !== null)
      .sort((a, b) => {
        // Sort by score (descending)
        if (a.score !== null && b.score !== null) {
          return b.score - a.score;
        }
        return 0;
      })
      .slice(0, limit);
  }
}

export const storage = new MemStorage();
